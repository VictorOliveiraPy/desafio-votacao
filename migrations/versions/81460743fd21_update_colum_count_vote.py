"""Update colum count_vote

Revision ID: 81460743fd21
Revises: 5475c845693e
Create Date: 2023-06-06 13:09:07.609862

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '81460743fd21'
down_revision = '5475c845693e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("agendas", sa.Column("vote_count", sa.Integer(), default=0))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('associates',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('associates_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='associates_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('agendas',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('agendas_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('associate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('session_open', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('session_expiration', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['associate_id'], ['associates.id'], name='agendas_associate_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='agendas_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('votes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('associate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('agenda_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vote', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['agenda_id'], ['agendas.id'], name='votes_agenda_id_fkey'),
    sa.ForeignKeyConstraint(['associate_id'], ['associates.id'], name='votes_associate_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='votes_pkey')
    )
    # ### end Alembic commands ###
